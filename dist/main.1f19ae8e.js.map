{"version":3,"sources":["main.js"],"names":["Vue","el","data","equation","isDecimalAdded","isOperatorAdded","isStarted","methods","isOperator","character","indexOf","append","calculate","result","replace","RegExp","parseFloat","eval","toFixed","toString","calculateToggle","calculatePercentage","clear"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["new Vue({\r\n  el: \"#app\",\r\n  data: {\r\n    equation: \"0\",\r\n    isDecimalAdded: false,\r\n    isOperatorAdded: false,\r\n    isStarted: false,\r\n  },\r\n  methods: {\r\n    // Check if the character is + / - / × / ÷\r\n    isOperator(character) {\r\n      return [\"+\", \"-\", \"×\", \"÷\"].indexOf(character) > -1;\r\n    },\r\n    // When pressed Operators or Numbers\r\n    append(character) {\r\n      // Start\r\n      if (this.equation === \"0\" && !this.isOperator(character)) {\r\n        if (character === \".\") {\r\n          this.equation += \"\" + character;\r\n          this.isDecimalAdded = true;\r\n        } else {\r\n          this.equation = \"\" + character;\r\n        }\r\n\r\n        this.isStarted = true;\r\n        return;\r\n      }\r\n\r\n      // If Number\r\n      if (!this.isOperator(character)) {\r\n        if (character === \".\" && this.isDecimalAdded) {\r\n          return;\r\n        }\r\n\r\n        if (character === \".\") {\r\n          this.isDecimalAdded = true;\r\n          this.isOperatorAdded = true;\r\n        } else {\r\n          this.isOperatorAdded = false;\r\n        }\r\n\r\n        this.equation += \"\" + character;\r\n      }\r\n\r\n      // Added Operator\r\n      if (this.isOperator(character) && !this.isOperatorAdded) {\r\n        this.equation += \"\" + character;\r\n        this.isDecimalAdded = false;\r\n        this.isOperatorAdded = true;\r\n      }\r\n    },\r\n    // When pressed '='\r\n    calculate() {\r\n      let result = this.equation\r\n        .replace(new RegExp(\"×\", \"g\"), \"*\")\r\n        .replace(new RegExp(\"÷\", \"g\"), \"/\");\r\n\r\n      this.equation = parseFloat(eval(result).toFixed(9)).toString();\r\n      this.isDecimalAdded = false;\r\n      this.isOperatorAdded = false;\r\n    },\r\n    // When pressed '+/-'\r\n    calculateToggle() {\r\n      if (this.isOperatorAdded || !this.isStarted) {\r\n        return;\r\n      }\r\n\r\n      this.equation = this.equation + \"* -1\";\r\n      this.calculate();\r\n    },\r\n    // When pressed '%'\r\n    calculatePercentage() {\r\n      if (this.isOperatorAdded || !this.isStarted) {\r\n        return;\r\n      }\r\n\r\n      this.equation = this.equation + \"* 0.01\";\r\n      this.calculate();\r\n    },\r\n    // When pressed 'AC'\r\n    clear() {\r\n      this.equation = \"0\";\r\n      this.isDecimalAdded = false;\r\n      this.isOperatorAdded = false;\r\n      this.isStarted = false;\r\n    },\r\n  },\r\n});\r\n"]}